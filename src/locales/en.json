{
  "common": {
    "user": {
      "email": "Mail",
      "password": "password",
      "passwordNew": "new password",
      "passwordConfirm": "Repeat password",
      "name": "Name",
      "avatar": "Avatar link",
      "account": "Account"
    },
    "role": {
      "admin": "administrator",
      "user": "Unauthorized user",
      "authUser": "Authorized user",
      "guest": "tourists"
    },
    "action": {
      "login": "Log in",
      "next": "Next step",
      "logout": "Log out",
      "newData": "Add new data",
      "new": "New",
      "create": "create",
      "send": "send",
      "update": "renew",
      "delete": "delete",
      "edit": "edit",
      "check": "choose",
      "search": "Find",
      "ok": "Sure",
      "cancel": "Cancel",
      "start": "start",
      "copy": "copy",
      "clone": "clone",
      "clear": "Clear",
      "refresh": "refresh",
      "enable": "enable",
      "save": "save",
      "download": "download",
      "reset": "reset",
      "open": "Open",
      "close": "closure",
      "preview": "Preview",
      "loadMore": "View more",
      "restore": "recover",
      "change": "Revise",
      "goToLogin": "Go back and log in",
      "openPicker": "Open selector",
      "connectionTest": "Modify backend address",
      "createRecord": "Create data",
      "createTable": "Create data table",
      "deleteTable": "Delete data table",
      "editTable": "Edit data table information",
      "truncateData": "Clear data",
      "uploadFile": "Upload files",
      "uploadImage": "Upload pictures",
      "verified": "certified",
      "changePassword": "Change password",
      "deleteSelected": "Delete selected",
      "saveAndContinue": "Save and continue",
      "sendTestEmail": "Send test email",
      "resetAdminPassword": "Reset your administrator password",
      "sendVerificationEmail": "Send account verification email",
      "sendLoginEmail": "User login email reminder",
      "sendResetEmail": "Send password reset email",
      "learnMore": "Click to learn more",
      "review": "check",
      "checkLocale": "switch language",
      "checkTheme": "switch theme",
      "setNewValue": "save key",
      "export": "Export",
      "import": "import",
      "copyJson": "Copy JSON data",
      "exportJson": "Export to JSON file",
      "importJson": "Import from JSON file"
    },
    "tip": {
      "enabled": "enable",
      "disabled": "Disable",
      "required": "necessary",
      "optional": "Optional",
      "public": "public display",
      "private": "Hide display",
      "overdense": "encrypted",
      "provider": "provider",
      "nonfalsey": "non-false value",
      "encrypted": "Encrypted",
      "new": "new",
      "old": "old",
      "autoGeneratedTime": "This field will automatically generate and fill in the time. Please select the generation time.",
      "serviceNotEnabled": "The service has not been enabled yet",
      "envPrevention": "Prevent data loss from triggering unexpected actions in production environments"
    },
    "input": {
      "minLength": {
        "name": "minimum length",
        "placeholder": "Defaults to \"{ minLength }\" characters",
        "tip": "Leave blank or set to 0 for no limit"
      },
      "maxLength": {
        "name": "maximum length",
        "placeholder": "Defaults to \"{ maxLength }\" characters",
        "tip": "Leave blank or set to 0 for no limit"
      },
      "imageSizeEg": {
        "name": "More writing examples",
        "content": {
          "1": "(100x50) - Crop from center to WxH view box",
          "2": "(100x50t) - Crop from top to WxH view box",
          "3": "(100x50b) - Crop from bottom to WxH view box",
          "4": "(100x50f) - No cropping, fits within WxH view box",
          "5": "(0x50) - adjust to H height, maintaining aspect ratio",
          "6": "(100x0) - resize to W width, maintaining aspect ratio"
        }
      },
      "validationPattern": {
        "name": "Verification mode (regular)",
        "tip": "For example: ^[a-z0-9]+$"
      },
      "autoGeneratePattern": {
        "name": "Autofill rules",
        "tip": "For example: ^[a-z0-9]+$"
      },
      "cascadeDelete": {
        "name": "Cascade delete",
        "tip": "When deleting \"{ tableName }\" table records, records with corresponding IDs in the associated multiple tables will also be deleted. In the case of multiple associations, the cascade delete operation will only be performed when all data in the related data table has been removed."
      },
      "thumbSize": {
        "name": "Thumbnail size",
        "placeholder": "For example \"100x100\"",
        "tip": "List of alternative thumbnail sizes for image files, defaulting to 100x100 pixel size for faster loading on first display on the frontend"
      },
      "maxFileSize": {
        "name": "File size limit",
        "placeholder": "Bytes (please enter a number)",
        "tip": ""
      }
    },
    "switch": {
      "protected": {
        "name": "protected resources",
        "placeholder": "Access requires passing API permission rules or carrying a specific token.",
        "tip": ""
      },
      "stripUrlDomain": {
        "name": "Remove domain names from file links",
        "tip": "This can help improve the portability of editor content between different environments, as there will no longer be a need to replace the local base URL"
      },
      "unallowedDomain": {
        "name": "List of disallowed URLs",
        "tip": "This setting will have no effect if \"Only allowed URL list\" is set"
      },
      "allowableDomain": {
        "name": "Only allowed URL list",
        "tip": "This setting will have no effect if the \"Not allowed URL list\" is set"
      },
      "noDecimals": {
        "name": "No decimals allowed",
        "tip": "Existing decimal numbers are not affected"
      },
      "setPrivate": {
        "name": "Hide display",
        "tip": "Hide this field in the request response and search filter of the interface"
      },
      "nonempty": {
        "name": "non-null value",
        "tip": "Empty or zero values ​​are not allowed"
      },
      "": {},
      "presentable": {
        "name": "Priority display",
        "tip": "Displayed at the top of the relationship list in the administrator interface (default is automatic)"
      }
    },
    "database": {
      "baseTemplate": "Universal",
      "viewTemplate": "Query only",
      "authTemplate": "Comes with certification",
      "table": "data sheet",
      "tableName": "Data table name",
      "query": "Query",
      "field": "Field",
      "createPresetField": "Add field",
      "data": "table data",
      "indexSetting": "Field index settings",
      "index": "Ordinary index",
      "unique": "unique index",
      "pageNumber": "Number of pages",
      "amountOfData": "Data volume",
      "sort": "sort",
      "SortingRules": "Sorting rules",
      "relationTable": "Data table to be associated",
      "fieldPreset": {
        "name": "Field type defaults",
        "string": "string",
        "editor": "rich text",
        "number": "number",
        "bool": "Boolean",
        "email": "mail",
        "url": "URL",
        "datetime": "date",
        "autoDate": "Automatically generate dates",
        "select": "option group",
        "file": "document",
        "relation": "foreign key",
        "json": "JSON",
        "text": "normal text"
      }
    },
    "menu": {
      "collection": "Data panel",
      "log": "log",
      "setting": "set up",
      "appConfig": "Basic settings",
      "smtpConfig": "Mail service",
      "storageConfig": "object storage",
      "backupConfig": "Data backup"
    },
    "placeholder": {
      "type": "type",
      "description": "describe",
      "params": "parameter",
      "option": "Options",
      "preset": "Default",
      "template": "template",
      "single": "single",
      "selected": "Selected",
      "fieldName": "Field name",
      "multiple": "Multiple",
      "style": "style",
      "docs": "document",
      "searchTable": "Search datasheet",
      "adminOnly": "Administrators only",
      "exempliGratia": "For example",
      "forAuth": "for authentication",
      "other": "other",
      "forOther": "Other uses",
      "secondaryValidationInput": "Enter the required verification content",
      "requestVerification": "issue verification",
      "confirmVerification": "Accept verification",
      "fileName": "file name",
      "mustBeByte": "Must be bytes",
      "fileSizeLimit": "File size limit (unit: bytes)",
      "serverUrl": "Backend server address",
      "apiUrl": "API / interface address",
      "apiQueryParameters": "URL required parameters",
      "apiPathParameters": "Interface URL path composition parameters",
      "apiParameters": "Request body JSON key name",
      "apiResponses": "Response content example",
      "separator": "Multiple separated by decimal point",
      "authMethod": "Get authentication method",
      "amountOfRequest": "Request volume",
      "null": "null value",
      "cannotEdit": "Related configuration is invalid",
      "hoverToSee": "View with mouse hover",
      "thirdPartyAuthorization": "Third-party login authorization",
      "searchTerm": "Search term or filter, example > '2022-01-01'...",
      "autoGenerate": "Leave it blank and it will be automatically generated",
      "freeAuth": "Leave blank to set no permissions",
      "allowableFileType": "List of file types allowed to be uploaded",
      "defaultUploadingFile": "Leaving blank will not allow any files to be uploaded",
      "defaultUnallowed": "Leave blank to disallow any operation",
      "defaultSetMfa": "Leave blank to require multi-factor authentication (MFA) for all users",
      "defaultSetDisable": "Leave blank to disable",
      "atCreate": "When new data is created",
      "atUpdate": "When data is updated",
      "atCreateOrUpdate": "When data is created/updated",
      "checkPublic": "Make emails public or private",
      "displayedField": "Display fields",
      "image": "picture",
      "document": "document",
      "video": "video",
      "zip": "Compressed package",
      "unfoldTable": "Expand system data table",
      "collapseTable": "Collapse system data table",
      "eventDataFormat": "SSE event data format",
      "searchDataPrompt": "Search data, supported matching rules such as created > \"2022-01-01\"",
      "searchLogPrompt": "Search logs, supported matching rules such as level > 0 && data.auth = “guest”"
    },
    "popup": {
      "mockNewToken": {
        "name": "Manually generate verification token",
        "content": {
          "1": "Generate a fixed authentication token for user { email }"
        }
      },
      "editTable": {
        "name": "Edit \"{ tableName }\" table information",
        "placeholder": {
          "1": "Modify table name",
          "4": "Are you sure you want to modify the basic information of the \"{ tableName }\" data table?",
          "5": "If the field to be deleted or modified is associated with another data table, you need to manually update the other table references accordingly!",
          "6": "All data associated with the changed fields will be permanently deleted!"
        }
      },
      "authSetting": {
        "name": "Login authentication settings",
        "oauth2": {
          "name": "OAuth2.0 third-party login",
          "content": {
            "1": "Enable OAuth2 authentication",
            "2": "After enabling OAuth2 authentication, you need to add the corresponding OAuth2 application in the \"Third-Party Login Authorization\" page"
          }
        },
        "token": {
          "name": "Token validity period",
          "input": {
            "authToken": {
              "name": "Login authorization",
              "placeholder": "unchanged",
              "tip": ""
            },
            "verificationToken": {
              "name": "Email verification",
              "placeholder": "unchanged",
              "tip": ""
            },
            "passwordResetToken": {
              "name": "Password reset",
              "placeholder": "unchanged",
              "tip": ""
            },
            "emailChangeToken": {
              "name": "Email modification",
              "placeholder": "unchanged",
              "tip": ""
            },
            "fileToken": {
              "name": "File protection",
              "placeholder": "unchanged",
              "tip": ""
            }
          },
          "action": {
            "destroyToken": "Invalidate all previously issued tokens"
          }
        },
        "opt": {
          "name": "one-time password"
        },
        "mfa": {
          "name": "Multi-factor authentication (MFA)"
        },
        "emailTemplate": {
          "name": "Email template",
          "input": {
            "emailAuth": {
              "name": "Email verification template",
              "placeholder": ""
            },
            "passwordReset": {
              "name": "Email password reset template",
              "placeholder": ""
            },
            "changeEmail": {
              "name": "Email number modification template",
              "placeholder": ""
            },
            "otpEmail": {
              "name": "One-Time Password (OTP) Template",
              "placeholder": ""
            },
            "loginAlert": {
              "name": "Login reminder email template",
              "placeholder": ""
            }
          }
        },
        "passwordLoginSetting": {
          "name": "Custom fields + password",
          "input": {
            "authFields": "Username field for authentication"
          }
        }
      },
      "logSetting": {
        "name": "Log settings",
        "logDetail": "Log details",
        "maxDaysRetention": "Log retention days",
        "minLogLevel": "Log level",
        "enableIpLog": "Record visitor IP",
        "enableAuthLog": "Record the authorizer ID",
        "content": {
          "1": "Setting to 0 will clear the current log data and turn off the logging function",
          "2": "Log data that is greater than the corresponding level of the “number” above will be included."
        }
      },
      "writeSql": {
        "name": "Write SQL query statements",
        "placeholder": {
          "1": ""
        }
      },
      "accountSetting": {
        "name": "Account settings",
        "content": {
          "1": "Here you can view and export the current configuration information, or export and import it to another PocketBase environment.",
          "2": "Send account verification email to { email }",
          "3": "Send password reset email to { email }"
        }
      },
      "apiRequestPermission": {
        "name": "Interface access rights",
        "placeholder": {
          "1": "Create data",
          "2": "Delete data",
          "3": "Update data",
          "4": "All inquiries",
          "5": "Single query",
          "6": "Certification",
          "7": "manage",
          "8": "Add additional authentication rules",
          "9": "manage",
          "10": "manage",
          "11": "manage"
        },
        "content": {
          "1": "After configuration, additional access authentication will be performed, which will be executed before all authentication methods.",
          "2": "For example, to allow only verified users to authenticate, you can set it to \"verified = true\"",
          "3": "Leave blank to allow any user to authenticate",
          "4": "To disable authentication completely you can change it to \"Set superuser only\""
        },
        "action": {
          "showList": "Expand to view currently available fields",
          "hideList": "Collapse the list of currently available fields",
          "setAdminRule": "Set the interface to be available only to administrators",
          "unlockAdminRule": "The current interface is only available to administrators, click to unlock"
        }
      },
      "picker": {
        "name": "Select the \"{ tableName }\" table data to be associated",
        "action": {},
        "content": {
          "1": "No matching data found",
          "2": "No data selected for association"
        }
      },
      "apiDocs": {
        "getListApi": {
          "name": "Paginated query / GET",
          "content": {
            "1": "Returns all data in the \"{ tableName }\" table, and supports paging query, sorting and filtering"
          }
        },
        "getViewApi": {
          "name": "Single query / GET",
          "content": {
            "1": "Query a \"{ tableName }\" table data based on ID"
          }
        },
        "createDataApi": {
          "name": "Create data/POST",
          "content": {
            "1": "Add a new \"{ tableName }\" table data"
          }
        },
        "updateDataApi": {
          "name": "Single update/PATCH",
          "content": {
            "1": "Update a \"{ tableName }\" table data based on ID"
          }
        },
        "deleteDataApi": {
          "name": "Single delete / DELETE",
          "content": {
            "1": "Delete a piece of \"{ tableName }\" table data based on ID"
          }
        },
        "sseApi": {
          "name": "Bulk Subscription/SSE",
          "content": {
            "1": "Subscribe to real-time changes to the \"{ tableName }\" table via Server Sent Events (SSE)"
          }
        },
        "batchApi": {
          "name": "Unified addition, deletion, modification and query/POST",
          "content": {
            "1": "Implemented in a single request: create/update/modify/delete multiple \"{ tableName }\" table records, and support batch processing and transactions"
          }
        },
        "getAuthMethods": {
          "name": "Query user authorization method / GET",
          "content": {
            "1": "Query the list of \"identity authorization methods\" supported by the server"
          }
        },
        "authWithPassword": {
          "name": "Password authorization / POST",
          "content": {
            "1": "Use email or other fields to combine the password and finally initiate a verification authorization request"
          }
        },
        "authWithOAuth2": {
          "name": "OAuth2 Authorization/POST",
          "content": {
            "1": "Authenticates using an OAuth2 provider and returns a new authentication token and record data"
          }
        },
        "authWithOTP": {
          "name": "OTP authorization / POST",
          "content": {
            "1": "Authenticate using one-time password (OTP)"
          }
        },
        "authRefresh": {
          "name": "Refresh authorization status / POST",
          "content": {
            "1": "Create a new authorization token for an already authorized data request"
          }
        },
        "verification": {
          "name": "Send authentication request/POST",
          "content": {
            "1": "Verify that the user account is valid, for example by sending an email"
          }
        },
        "passwordReset": {
          "name": "Send reset password verification / POST",
          "content": {
            "1": "Send a user password reset request, for example by sending an email"
          }
        },
        "changeEmail": {
          "name": "Change email/POST",
          "content": {
            "1": "If the user changes the account email address by himself, he needs to verify it through this interface, for example, by sending an email."
          }
        },
        "content": {
          "1": "The following record fields are available",
          "2": "The fields allowed to be requested can be limited by a special filter @request",
          "3": "You can also use the @collection filter to add constraints and query other data table contents",
          "4": "Rule example"
        }
      }
    },
    "message": {
      "loading": "Loading...",
      "notAnyData": "no data",
      "createSuccess": "Created successfully",
      "updateSuccess": "Update successful",
      "deleteSuccess": "Delete successfully",
      "createError": "Creation failed",
      "updateError": "Update failed",
      "deleteError": "Delete failed",
      "notFountData": "No data yet",
      "applyNewSetting": "New settings saved",
      "defaultValue": "Currently defaults to \"{ value }\"",
      "defaultPageNumber": "By default, data on page 1 is returned",
      "defaultLimitNumber": "By default, 30 pieces of data are returned per page",
      "selectedPrompt": "{ selected } pieces of data are selected",
      "deletePrompt": "Are you sure you want to delete \"{ value }\"?",
      "deleteDataPrompt": "Are you sure you want to delete \"{ value }\", including the data associated with it?",
      "updateVerificationPrompt": "Are you sure you want to modify the authentication status of the current data?",
      "deleteSelectedPrompt": "Are you sure you want to delete the selected data?",
      "unlinkProviderPrompt": "Are you sure you want to remove the provider \"{ provider }\"?",
      "notAnyTables": "You don't have any data tables yet",
      "checkServerConnect": "Unable to connect to the service, please make sure the backend address is filled in correctly and running properly!",
      "oauth2AuthFailed": "OAuth2 authentication failed",
      "sendOtpEmailPrompt": "Check your {otpEmail} inbox and enter the Individual Password (OTP) below that you received",
      "dataVerificationFailed": "Unable to verify submission data",
      "plaseTryAgain": "You can close this window and try again",
      "sendEmailSussess": "Tried sending email to: { email }",
      "recovery": "Do you want to restore the last automatically saved input box content?",
      "unsave": "The data has not been saved. Are you sure you want to leave?",
      "noOa2Provider": "The OAuth2 application has not been configured yet",
      "insufficientAuthority": "Insufficient permissions",
      "noAccess": "No access",
      "networkError": "Network error, please try again later",
      "copySuccess": "Successfully copied to clipboard!",
      "followRules": "Requesting permissions follows the rules: { url }",
      "loadTimeout": "If the service cannot be connected, please click the settings button in the upper right corner to switch to another backend address.",
      "missingContext": "Data context content has been lost!",
      "uploadReminder": "Are you sure you want to upload the file \"{ fileName }\"?\nPlease make sure the files you upload are safe!"
    },
    "subfield": {
      "pin": "fixed",
      "unPin": "Unpin",
      "otherTableSetting": "Ordinary watch",
      "systemTableSetting": "system tables",
      "adminTableSetting": "The current table is a system-built-in table that cannot be deleted and can only be expanded.",
      "syncSetting": "System data"
    }
  },
  "page": {
    "login": {
      "title": "Log in",
      "action": {
        "forgetPsw": "forget the password"
      }
    },
    "forget": {
      "title": "Retrieve password",
      "content": {
        "1": "Enter your email address and we'll send you a 'link to reset your password'",
        "2": "An email has been attempted to be sent to '{email}'. If it is not received, it means: 1. The user's mailbox does not exist. 2. It has been received in the email recycle bin."
      }
    },
    "init": {
      "title": "Create the first admin user",
      "action": {
        "createUser": "Create and log in"
      },
      "content": {
        "1": "Welcome to PocketBase",
        "2": "Enter at least 10 characters"
      }
    },
    "collection": {
      "content": {
        "action": {
          "apiPreviewme": "Interface documentation"
        }
      },
      "sideBar": {},
      "dialog": {}
    },
    "log": {
      "logLevel": "Log classification:",
      "adminLog": "show administrator log",
      "table": {
        "field": {
          "level": "Request results",
          "message": "Request details",
          "createAt": "Created in"
        }
      }
    },
    "setting": {
      "content": {
        "application": {
          "nowAppName": "Front-end site title",
          "serverUrl": "Backend service URL",
          "proxy": {
            "title": "Get the real IP of the client",
            "curIp": "Detected that your current IP is",
            "curProxyHeader": "Detected client proxy header",
            "trustedHeaders": "The IP identifier of the request header to be trusted",
            "priorityIp": "final adoption",
            "content": {
              "1": "When PocketBase is deployed on a platform such as Fly, or accessed through a proxy such as NGINX, requests from different users will come from the same IP address (i.e. the IP of the proxy connected to your PocketBase application)",
              "2": "In this case, to get the actual user IP (for rate limiting, logging, etc.) you need to configure your proxy correctly and list the following trusted headers that PocketBase can use to extract the user IP",
              "3": "When using such proxies, to prevent spoofing, it is recommended",
              "4": "Use headers that can only be controlled by the proxy and cannot be set manually by the user",
              "5": "Make sure the PocketBase server is only accessible through a proxy",
              "6": "If PocketBase is not deployed behind a proxy, you can clear the header information fields",
              "7": "Separate with half-width commas to configure multiple, single such as",
              "8": "Not supported / Invalid proxy configuration"
            },
            "tip": {
              "1": "Configured proxy headers do not match detected ones",
              "2": "In some cases, a proxy server may return multiple IP addresses in the HTTP header. Typically these IP addresses are arranged in order from farthest to nearest. In this case, the rightmost IP address is usually that of the client. The actual IP address is therefore considered the most reliable or \"more trustworthy\". However, this is not a hard and fast rule as different proxy servers may have different implementations.",
              "3": "The IP on the far left",
              "4": "The IP on the far right",
              "5": "If what is displayed is not the actual IP of your current client, it means you need to configure an available proxy for the server.",
              "6": "Proxy header detected, recommended to be listed as trusted!"
            }
          },
          "rate": {
            "title": "Interface request frequency limit",
            "route": "routing",
            "maximum": "frequency",
            "intervalTime": "Interval/second",
            "roleToLimit": "Restricted objects",
            "action": {
              "addRule": "Add new restrictions"
            },
            "content": {
              "1": "Rate limit label format",
              "2": "Rate limiting rules are parsed in the following order (stopping on first match)",
              "3": "If multiple rules have the same label but target different user audiences (e.g. 'guest' vs. 'auth'), only the matching audience rule will be considered",
              "4": "Rate limit labels can be in one of the following formats:"
            }
          },
          "batch": {
            "title": "Interface load limit",
            "maxConcurrentRequest": "Maximum number of simultaneous requests",
            "requestTimeout": "Request timeout setting (unit: seconds)",
            "requestBodySize": "Request body size limit (unit: bytes)"
          },
          "action": {
            "hideEditControl": "Hidden data creation and editing entrance"
          }
        },
        "smtp": {
          "title": "SMTP configuration",
          "senderNickname": "Sender's nickname",
          "senderEmail": "Sender's email",
          "userEmail": "Recipient email",
          "action": {
            "smtpEnable": "Enable mail service",
            "expandDetail": "Expand more options",
            "hideDetail": "Hide more options"
          },
          "content": {
            "1": "When closed, PocketBase will use the unix \"sendmail\" command to send emails (this function is no longer available). In order to ensure that emails are sent, please also configure the SMTP mail server yourself.",
            "2": "Some SMTP servers, such as Gmail SMTP-relay, require an appropriate domain name in the initial EHLO/HELO exchange to identify the server sending the mail. Using 'localhost' or an invalid domain name may cause the SMTP server to refuse the connection, as they usually require authentication. Server for sending mail to prevent abuse and spam",
            "3": "Authentication",
            "4": "Password reset",
            "5": "Change email",
            "6": "Send one-time password",
            "7": "Login status alarm",
            "8": "Email sent successfully! If you don't receive it, please check your spam folder. It may be that the recipient's email address is filled in by someone else.",
            "9": "The email sending times out, possibly because the network between the server and the SMTP server is not smooth."
          },
          "smtpHost": "SMTP service address",
          "smtpPort": "SMTP port",
          "smtpUsername": "SMTP username",
          "smtpPassword": "SMTP key",
          "tlsEncryption": "TLS encryption",
          "authMethod": "How to initiate verification",
          "ehloOrHeloDomain": "Domain name provided to the mail server for verification (EHLO/HELO)"
        },
        "fileStorage": {
          "content": {
            "1": "When not enabled, all file upload interfaces will use local hard disk storage, so you can enable and configure S3 storage and store subsequent files in S3 storage.",
            "2": "If files uploaded by users exist locally, please manually transfer them to the new object storage",
            "3": "There are many command line tools that can help you, such as:"
          },
          "action": {
            "s3Enable": "Enable S3 object storage",
            "usePathStyleUrl": "Using path style S3 URLs"
          },
          "endpoint": "Endpoint",
          "bucket": "Bucket Name",
          "region": "Region Name",
          "accessKey": "Access Key ID",
          "secret": "Secret Key"
        },
        "backup": {
          "cronExpression": "CRON expression",
          "maxBackupFilesNum": "Maximum number of backup files to retain",
          "content": {
            "1": "Data backup & recovery",
            "2": "No backup files yet",
            "3": "Please note that during the backup, other concurrent write requests may fail because the database will be temporarily 'locked' (usually happens during ZIP generation)",
            "4": "If you are using S3 storage to upload collection files, you will need to back them up separately as they are not stored locally and will not be included in the final backup!",
            "5": "The input content needs to carry the “.zip” suffix, and the name can only contain numbers, English, underscores, and minus signs.",
            "6": "Backup/restore operation in progress",
            "7": null,
            "8": "Backup recovery is experimental and only works on UNIX-based operating systems!",
            "9": "Please proceed with caution, it is recommended to manually save some historical backup files to your other storage",
            "10": "The current operation will overwrite the contents of the \"pb_data\" directory on the server side, and the application process will be automatically restarted after the operation is completed.",
            "11": "This means that once successful, all your current data (including data table contents, users, super users, etc.) will be completely overwritten by the new data",
            "12": "If the backup file is invalid or incompatible, it will eventually be rolled back without data loss (e.g. \"data.db\" data)",
            "13": "Please enter the current backup file name to confirm the operation",
            "14": "Daily: 00:00",
            "15": "Every Sunday: 00:00",
            "16": "Every Monday and Wednesday: 00:00",
            "17": "The first day of each month: 00:00",
            "18": "URL format used to access S3 buckets and objects. When turned on, the bucket name is included in the path part of the URL rather than as part of the domain name. For example \"https://s3.amazonaws.com/BUCKET/KEY\" instead of the default \"https://BUCKET.s3.amazonaws.com/KEY\"",
            "19": "Backup file generation has started!"
          },
          "action": {
            "createBackup": "Create a backup file (.zip)",
            "uploadBackup": "Upload additional backup files (.zip)",
            "restoreBackup": "Restore data from backup files",
            "moreBackupOption": "Automatic backup/upload to S3 storage",
            "enableAutoBackup": "Enable scheduled automatic backup",
            "backupToS3": "Automatically upload backup files to S3 storage",
            "usePathStyleUrl": "Using path style S3 URLs",
            "backupName": "Backup name"
          }
        },
        "sync": {
          "export": {
            "title": "Export the current configuration information to quickly restore to the new environment later"
          },
          "import": {
            "title": "You can paste the JSON configuration directly, or:"
          }
        }
      }
    }
  }
}